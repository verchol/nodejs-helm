/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var hapi_release_hook_pb = require('../../hapi/release/hook_pb.js');
var hapi_release_info_pb = require('../../hapi/release/info_pb.js');
var hapi_chart_config_pb = require('../../hapi/chart/config_pb.js');
var hapi_chart_chart_pb = require('../../hapi/chart/chart_pb.js');
goog.exportSymbol('proto.hapi.release.Release', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.release.Release = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hapi.release.Release.repeatedFields_, null);
};
goog.inherits(proto.hapi.release.Release, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.release.Release.displayName = 'proto.hapi.release.Release';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hapi.release.Release.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.release.Release.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.release.Release.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.release.Release} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.release.Release.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && hapi_release_info_pb.Info.toObject(includeInstance, f),
    chart: (f = msg.getChart()) && hapi_chart_chart_pb.Chart.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && hapi_chart_config_pb.Config.toObject(includeInstance, f),
    manifest: jspb.Message.getFieldWithDefault(msg, 5, ""),
    hooksList: jspb.Message.toObjectList(msg.getHooksList(),
    hapi_release_hook_pb.Hook.toObject, includeInstance),
    version: jspb.Message.getFieldWithDefault(msg, 7, 0),
    namespace: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.release.Release}
 */
proto.hapi.release.Release.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.release.Release;
  return proto.hapi.release.Release.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.release.Release} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.release.Release}
 */
proto.hapi.release.Release.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new hapi_release_info_pb.Info;
      reader.readMessage(value,hapi_release_info_pb.Info.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 3:
      var value = new hapi_chart_chart_pb.Chart;
      reader.readMessage(value,hapi_chart_chart_pb.Chart.deserializeBinaryFromReader);
      msg.setChart(value);
      break;
    case 4:
      var value = new hapi_chart_config_pb.Config;
      reader.readMessage(value,hapi_chart_config_pb.Config.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setManifest(value);
      break;
    case 6:
      var value = new hapi_release_hook_pb.Hook;
      reader.readMessage(value,hapi_release_hook_pb.Hook.deserializeBinaryFromReader);
      msg.addHooks(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.release.Release.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.release.Release.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.release.Release} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.release.Release.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      hapi_release_info_pb.Info.serializeBinaryToWriter
    );
  }
  f = message.getChart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      hapi_chart_chart_pb.Chart.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      hapi_chart_config_pb.Config.serializeBinaryToWriter
    );
  }
  f = message.getManifest();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHooksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      hapi_release_hook_pb.Hook.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.release.Release.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.release.Release.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Info info = 2;
 * @return {?proto.hapi.release.Info}
 */
proto.hapi.release.Release.prototype.getInfo = function() {
  return /** @type{?proto.hapi.release.Info} */ (
    jspb.Message.getWrapperField(this, hapi_release_info_pb.Info, 2));
};


/** @param {?proto.hapi.release.Info|undefined} value */
proto.hapi.release.Release.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hapi.release.Release.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.release.Release.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hapi.chart.Chart chart = 3;
 * @return {?proto.hapi.chart.Chart}
 */
proto.hapi.release.Release.prototype.getChart = function() {
  return /** @type{?proto.hapi.chart.Chart} */ (
    jspb.Message.getWrapperField(this, hapi_chart_chart_pb.Chart, 3));
};


/** @param {?proto.hapi.chart.Chart|undefined} value */
proto.hapi.release.Release.prototype.setChart = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hapi.release.Release.prototype.clearChart = function() {
  this.setChart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.release.Release.prototype.hasChart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hapi.chart.Config config = 4;
 * @return {?proto.hapi.chart.Config}
 */
proto.hapi.release.Release.prototype.getConfig = function() {
  return /** @type{?proto.hapi.chart.Config} */ (
    jspb.Message.getWrapperField(this, hapi_chart_config_pb.Config, 4));
};


/** @param {?proto.hapi.chart.Config|undefined} value */
proto.hapi.release.Release.prototype.setConfig = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hapi.release.Release.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.release.Release.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string manifest = 5;
 * @return {string}
 */
proto.hapi.release.Release.prototype.getManifest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hapi.release.Release.prototype.setManifest = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Hook hooks = 6;
 * @return {!Array.<!proto.hapi.release.Hook>}
 */
proto.hapi.release.Release.prototype.getHooksList = function() {
  return /** @type{!Array.<!proto.hapi.release.Hook>} */ (
    jspb.Message.getRepeatedWrapperField(this, hapi_release_hook_pb.Hook, 6));
};


/** @param {!Array.<!proto.hapi.release.Hook>} value */
proto.hapi.release.Release.prototype.setHooksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.hapi.release.Hook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hapi.release.Hook}
 */
proto.hapi.release.Release.prototype.addHooks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.hapi.release.Hook, opt_index);
};


proto.hapi.release.Release.prototype.clearHooksList = function() {
  this.setHooksList([]);
};


/**
 * optional int32 version = 7;
 * @return {number}
 */
proto.hapi.release.Release.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.hapi.release.Release.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string namespace = 8;
 * @return {string}
 */
proto.hapi.release.Release.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hapi.release.Release.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


goog.object.extend(exports, proto.hapi.release);
