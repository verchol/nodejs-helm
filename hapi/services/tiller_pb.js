/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var hapi_chart_chart_pb = require('../../hapi/chart/chart_pb.js');
var hapi_chart_config_pb = require('../../hapi/chart/config_pb.js');
var hapi_release_release_pb = require('../../hapi/release/release_pb.js');
var hapi_release_info_pb = require('../../hapi/release/info_pb.js');
var hapi_release_test_run_pb = require('../../hapi/release/test_run_pb.js');
var hapi_release_status_pb = require('../../hapi/release/status_pb.js');
var hapi_version_version_pb = require('../../hapi/version/version_pb.js');
goog.exportSymbol('proto.hapi.services.tiller.GetHistoryRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.GetHistoryResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.GetReleaseContentRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.GetReleaseContentResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.GetReleaseStatusRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.GetReleaseStatusResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.GetVersionRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.GetVersionResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.InstallReleaseRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.InstallReleaseResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.ListReleasesRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.ListReleasesResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.ListSort', null, global);
goog.exportSymbol('proto.hapi.services.tiller.ListSort.SortBy', null, global);
goog.exportSymbol('proto.hapi.services.tiller.ListSort.SortOrder', null, global);
goog.exportSymbol('proto.hapi.services.tiller.RollbackReleaseRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.RollbackReleaseResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.TestReleaseRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.TestReleaseResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.UninstallReleaseRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.UninstallReleaseResponse', null, global);
goog.exportSymbol('proto.hapi.services.tiller.UpdateReleaseRequest', null, global);
goog.exportSymbol('proto.hapi.services.tiller.UpdateReleaseResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.ListReleasesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hapi.services.tiller.ListReleasesRequest.repeatedFields_, null);
};
goog.inherits(proto.hapi.services.tiller.ListReleasesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.ListReleasesRequest.displayName = 'proto.hapi.services.tiller.ListReleasesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hapi.services.tiller.ListReleasesRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.ListReleasesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.ListReleasesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.ListReleasesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sortBy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    filter: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sortOrder: jspb.Message.getFieldWithDefault(msg, 5, 0),
    statusCodesList: jspb.Message.getRepeatedField(msg, 6),
    namespace: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.ListReleasesRequest}
 */
proto.hapi.services.tiller.ListReleasesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.ListReleasesRequest;
  return proto.hapi.services.tiller.ListReleasesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.ListReleasesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.ListReleasesRequest}
 */
proto.hapi.services.tiller.ListReleasesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {!proto.hapi.services.tiller.ListSort.SortBy} */ (reader.readEnum());
      msg.setSortBy(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 5:
      var value = /** @type {!proto.hapi.services.tiller.ListSort.SortOrder} */ (reader.readEnum());
      msg.setSortOrder(value);
      break;
    case 6:
      var value = /** @type {!Array.<!proto.hapi.release.Status.Code>} */ (reader.readPackedEnum());
      msg.setStatusCodesList(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.ListReleasesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.ListReleasesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.ListReleasesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSortBy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getStatusCodesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.ListReleasesRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string offset = 2;
 * @return {string}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.getOffset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.ListReleasesRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ListSort.SortBy sort_by = 3;
 * @return {!proto.hapi.services.tiller.ListSort.SortBy}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.getSortBy = function() {
  return /** @type {!proto.hapi.services.tiller.ListSort.SortBy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hapi.services.tiller.ListSort.SortBy} value */
proto.hapi.services.tiller.ListReleasesRequest.prototype.setSortBy = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string filter = 4;
 * @return {string}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.ListReleasesRequest.prototype.setFilter = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ListSort.SortOrder sort_order = 5;
 * @return {!proto.hapi.services.tiller.ListSort.SortOrder}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.getSortOrder = function() {
  return /** @type {!proto.hapi.services.tiller.ListSort.SortOrder} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.hapi.services.tiller.ListSort.SortOrder} value */
proto.hapi.services.tiller.ListReleasesRequest.prototype.setSortOrder = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated hapi.release.Status.Code status_codes = 6;
 * @return {!Array.<!proto.hapi.release.Status.Code>}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.getStatusCodesList = function() {
  return /** @type {!Array.<!proto.hapi.release.Status.Code>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<!proto.hapi.release.Status.Code>} value */
proto.hapi.services.tiller.ListReleasesRequest.prototype.setStatusCodesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.hapi.release.Status.Code} value
 * @param {number=} opt_index
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.addStatusCodes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.hapi.services.tiller.ListReleasesRequest.prototype.clearStatusCodesList = function() {
  this.setStatusCodesList([]);
};


/**
 * optional string namespace = 7;
 * @return {string}
 */
proto.hapi.services.tiller.ListReleasesRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.ListReleasesRequest.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.ListSort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.ListSort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.ListSort.displayName = 'proto.hapi.services.tiller.ListSort';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.ListSort.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.ListSort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.ListSort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.ListSort.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.ListSort}
 */
proto.hapi.services.tiller.ListSort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.ListSort;
  return proto.hapi.services.tiller.ListSort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.ListSort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.ListSort}
 */
proto.hapi.services.tiller.ListSort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.ListSort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.ListSort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.ListSort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.ListSort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.hapi.services.tiller.ListSort.SortBy = {
  UNKNOWN: 0,
  NAME: 1,
  LAST_RELEASED: 2
};

/**
 * @enum {number}
 */
proto.hapi.services.tiller.ListSort.SortOrder = {
  ASC: 0,
  DESC: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.ListReleasesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hapi.services.tiller.ListReleasesResponse.repeatedFields_, null);
};
goog.inherits(proto.hapi.services.tiller.ListReleasesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.ListReleasesResponse.displayName = 'proto.hapi.services.tiller.ListReleasesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hapi.services.tiller.ListReleasesResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.ListReleasesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.ListReleasesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.ListReleasesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.ListReleasesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    next: jspb.Message.getFieldWithDefault(msg, 2, ""),
    total: jspb.Message.getFieldWithDefault(msg, 3, 0),
    releasesList: jspb.Message.toObjectList(msg.getReleasesList(),
    hapi_release_release_pb.Release.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.ListReleasesResponse}
 */
proto.hapi.services.tiller.ListReleasesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.ListReleasesResponse;
  return proto.hapi.services.tiller.ListReleasesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.ListReleasesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.ListReleasesResponse}
 */
proto.hapi.services.tiller.ListReleasesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNext(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 4:
      var value = new hapi_release_release_pb.Release;
      reader.readMessage(value,hapi_release_release_pb.Release.deserializeBinaryFromReader);
      msg.addReleases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.ListReleasesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.ListReleasesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.ListReleasesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.ListReleasesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getReleasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      hapi_release_release_pb.Release.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.hapi.services.tiller.ListReleasesResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.ListReleasesResponse.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string next = 2;
 * @return {string}
 */
proto.hapi.services.tiller.ListReleasesResponse.prototype.getNext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.ListReleasesResponse.prototype.setNext = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 total = 3;
 * @return {number}
 */
proto.hapi.services.tiller.ListReleasesResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.ListReleasesResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated hapi.release.Release releases = 4;
 * @return {!Array.<!proto.hapi.release.Release>}
 */
proto.hapi.services.tiller.ListReleasesResponse.prototype.getReleasesList = function() {
  return /** @type{!Array.<!proto.hapi.release.Release>} */ (
    jspb.Message.getRepeatedWrapperField(this, hapi_release_release_pb.Release, 4));
};


/** @param {!Array.<!proto.hapi.release.Release>} value */
proto.hapi.services.tiller.ListReleasesResponse.prototype.setReleasesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hapi.release.Release=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hapi.release.Release}
 */
proto.hapi.services.tiller.ListReleasesResponse.prototype.addReleases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hapi.release.Release, opt_index);
};


proto.hapi.services.tiller.ListReleasesResponse.prototype.clearReleasesList = function() {
  this.setReleasesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetReleaseStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.GetReleaseStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetReleaseStatusRequest.displayName = 'proto.hapi.services.tiller.GetReleaseStatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetReleaseStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetReleaseStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetReleaseStatusRequest}
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetReleaseStatusRequest;
  return proto.hapi.services.tiller.GetReleaseStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetReleaseStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetReleaseStatusRequest}
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetReleaseStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetReleaseStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.GetReleaseStatusRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.hapi.services.tiller.GetReleaseStatusRequest.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.GetReleaseStatusRequest.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetReleaseStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.GetReleaseStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetReleaseStatusResponse.displayName = 'proto.hapi.services.tiller.GetReleaseStatusResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetReleaseStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetReleaseStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && hapi_release_info_pb.Info.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetReleaseStatusResponse}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetReleaseStatusResponse;
  return proto.hapi.services.tiller.GetReleaseStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetReleaseStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetReleaseStatusResponse}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new hapi_release_info_pb.Info;
      reader.readMessage(value,hapi_release_info_pb.Info.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetReleaseStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetReleaseStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      hapi_release_info_pb.Info.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional hapi.release.Info info = 2;
 * @return {?proto.hapi.release.Info}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.getInfo = function() {
  return /** @type{?proto.hapi.release.Info} */ (
    jspb.Message.getWrapperField(this, hapi_release_info_pb.Info, 2));
};


/** @param {?proto.hapi.release.Info|undefined} value */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string namespace = 3;
 * @return {string}
 */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.GetReleaseStatusResponse.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetReleaseContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.GetReleaseContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetReleaseContentRequest.displayName = 'proto.hapi.services.tiller.GetReleaseContentRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetReleaseContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetReleaseContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetReleaseContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetReleaseContentRequest}
 */
proto.hapi.services.tiller.GetReleaseContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetReleaseContentRequest;
  return proto.hapi.services.tiller.GetReleaseContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetReleaseContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetReleaseContentRequest}
 */
proto.hapi.services.tiller.GetReleaseContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetReleaseContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetReleaseContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetReleaseContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.GetReleaseContentRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.GetReleaseContentRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.hapi.services.tiller.GetReleaseContentRequest.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.GetReleaseContentRequest.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetReleaseContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.GetReleaseContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetReleaseContentResponse.displayName = 'proto.hapi.services.tiller.GetReleaseContentResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetReleaseContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetReleaseContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetReleaseContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    release: (f = msg.getRelease()) && hapi_release_release_pb.Release.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetReleaseContentResponse}
 */
proto.hapi.services.tiller.GetReleaseContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetReleaseContentResponse;
  return proto.hapi.services.tiller.GetReleaseContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetReleaseContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetReleaseContentResponse}
 */
proto.hapi.services.tiller.GetReleaseContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_release_release_pb.Release;
      reader.readMessage(value,hapi_release_release_pb.Release.deserializeBinaryFromReader);
      msg.setRelease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetReleaseContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetReleaseContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetReleaseContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetReleaseContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelease();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_release_release_pb.Release.serializeBinaryToWriter
    );
  }
};


/**
 * optional hapi.release.Release release = 1;
 * @return {?proto.hapi.release.Release}
 */
proto.hapi.services.tiller.GetReleaseContentResponse.prototype.getRelease = function() {
  return /** @type{?proto.hapi.release.Release} */ (
    jspb.Message.getWrapperField(this, hapi_release_release_pb.Release, 1));
};


/** @param {?proto.hapi.release.Release|undefined} value */
proto.hapi.services.tiller.GetReleaseContentResponse.prototype.setRelease = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.services.tiller.GetReleaseContentResponse.prototype.clearRelease = function() {
  this.setRelease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.GetReleaseContentResponse.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.UpdateReleaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.UpdateReleaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.UpdateReleaseRequest.displayName = 'proto.hapi.services.tiller.UpdateReleaseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.UpdateReleaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.UpdateReleaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UpdateReleaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    chart: (f = msg.getChart()) && hapi_chart_chart_pb.Chart.toObject(includeInstance, f),
    values: (f = msg.getValues()) && hapi_chart_config_pb.Config.toObject(includeInstance, f),
    dryRun: jspb.Message.getFieldWithDefault(msg, 4, false),
    disableHooks: jspb.Message.getFieldWithDefault(msg, 5, false),
    recreate: jspb.Message.getFieldWithDefault(msg, 6, false),
    timeout: jspb.Message.getFieldWithDefault(msg, 7, 0),
    resetValues: jspb.Message.getFieldWithDefault(msg, 8, false),
    wait: jspb.Message.getFieldWithDefault(msg, 9, false),
    reuseValues: jspb.Message.getFieldWithDefault(msg, 10, false),
    force: jspb.Message.getFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.UpdateReleaseRequest}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.UpdateReleaseRequest;
  return proto.hapi.services.tiller.UpdateReleaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.UpdateReleaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.UpdateReleaseRequest}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new hapi_chart_chart_pb.Chart;
      reader.readMessage(value,hapi_chart_chart_pb.Chart.deserializeBinaryFromReader);
      msg.setChart(value);
      break;
    case 3:
      var value = new hapi_chart_config_pb.Config;
      reader.readMessage(value,hapi_chart_config_pb.Config.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDryRun(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableHooks(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecreate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeout(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResetValues(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWait(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReuseValues(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.UpdateReleaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.UpdateReleaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UpdateReleaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChart();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      hapi_chart_chart_pb.Chart.serializeBinaryToWriter
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      hapi_chart_config_pb.Config.serializeBinaryToWriter
    );
  }
  f = message.getDryRun();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDisableHooks();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getRecreate();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getResetValues();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getWait();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getReuseValues();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getForce();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional hapi.chart.Chart chart = 2;
 * @return {?proto.hapi.chart.Chart}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getChart = function() {
  return /** @type{?proto.hapi.chart.Chart} */ (
    jspb.Message.getWrapperField(this, hapi_chart_chart_pb.Chart, 2));
};


/** @param {?proto.hapi.chart.Chart|undefined} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setChart = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hapi.services.tiller.UpdateReleaseRequest.prototype.clearChart = function() {
  this.setChart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.hasChart = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hapi.chart.Config values = 3;
 * @return {?proto.hapi.chart.Config}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getValues = function() {
  return /** @type{?proto.hapi.chart.Config} */ (
    jspb.Message.getWrapperField(this, hapi_chart_config_pb.Config, 3));
};


/** @param {?proto.hapi.chart.Config|undefined} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setValues = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hapi.services.tiller.UpdateReleaseRequest.prototype.clearValues = function() {
  this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.hasValues = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool dry_run = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getDryRun = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setDryRun = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool disable_hooks = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getDisableHooks = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setDisableHooks = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool recreate = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getRecreate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setRecreate = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 timeout = 7;
 * @return {number}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool reset_values = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getResetValues = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setResetValues = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool wait = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getWait = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setWait = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool reuse_values = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getReuseValues = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setReuseValues = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool force = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UpdateReleaseRequest.prototype.setForce = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.UpdateReleaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.UpdateReleaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.UpdateReleaseResponse.displayName = 'proto.hapi.services.tiller.UpdateReleaseResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.UpdateReleaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.UpdateReleaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.UpdateReleaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UpdateReleaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    release: (f = msg.getRelease()) && hapi_release_release_pb.Release.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.UpdateReleaseResponse}
 */
proto.hapi.services.tiller.UpdateReleaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.UpdateReleaseResponse;
  return proto.hapi.services.tiller.UpdateReleaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.UpdateReleaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.UpdateReleaseResponse}
 */
proto.hapi.services.tiller.UpdateReleaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_release_release_pb.Release;
      reader.readMessage(value,hapi_release_release_pb.Release.deserializeBinaryFromReader);
      msg.setRelease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.UpdateReleaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.UpdateReleaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.UpdateReleaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UpdateReleaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelease();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_release_release_pb.Release.serializeBinaryToWriter
    );
  }
};


/**
 * optional hapi.release.Release release = 1;
 * @return {?proto.hapi.release.Release}
 */
proto.hapi.services.tiller.UpdateReleaseResponse.prototype.getRelease = function() {
  return /** @type{?proto.hapi.release.Release} */ (
    jspb.Message.getWrapperField(this, hapi_release_release_pb.Release, 1));
};


/** @param {?proto.hapi.release.Release|undefined} value */
proto.hapi.services.tiller.UpdateReleaseResponse.prototype.setRelease = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.services.tiller.UpdateReleaseResponse.prototype.clearRelease = function() {
  this.setRelease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.UpdateReleaseResponse.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.RollbackReleaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.RollbackReleaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.RollbackReleaseRequest.displayName = 'proto.hapi.services.tiller.RollbackReleaseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.RollbackReleaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.RollbackReleaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.RollbackReleaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dryRun: jspb.Message.getFieldWithDefault(msg, 2, false),
    disableHooks: jspb.Message.getFieldWithDefault(msg, 3, false),
    version: jspb.Message.getFieldWithDefault(msg, 4, 0),
    recreate: jspb.Message.getFieldWithDefault(msg, 5, false),
    timeout: jspb.Message.getFieldWithDefault(msg, 6, 0),
    wait: jspb.Message.getFieldWithDefault(msg, 7, false),
    force: jspb.Message.getFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.RollbackReleaseRequest}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.RollbackReleaseRequest;
  return proto.hapi.services.tiller.RollbackReleaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.RollbackReleaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.RollbackReleaseRequest}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDryRun(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableHooks(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecreate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeout(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWait(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.RollbackReleaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.RollbackReleaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.RollbackReleaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDryRun();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDisableHooks();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRecreate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getWait();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getForce();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool dry_run = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getDryRun = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setDryRun = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool disable_hooks = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getDisableHooks = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setDisableHooks = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 version = 4;
 * @return {number}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool recreate = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getRecreate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setRecreate = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int64 timeout = 6;
 * @return {number}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool wait = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getWait = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setWait = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool force = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.RollbackReleaseRequest.prototype.setForce = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.RollbackReleaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.RollbackReleaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.RollbackReleaseResponse.displayName = 'proto.hapi.services.tiller.RollbackReleaseResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.RollbackReleaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.RollbackReleaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.RollbackReleaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.RollbackReleaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    release: (f = msg.getRelease()) && hapi_release_release_pb.Release.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.RollbackReleaseResponse}
 */
proto.hapi.services.tiller.RollbackReleaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.RollbackReleaseResponse;
  return proto.hapi.services.tiller.RollbackReleaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.RollbackReleaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.RollbackReleaseResponse}
 */
proto.hapi.services.tiller.RollbackReleaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_release_release_pb.Release;
      reader.readMessage(value,hapi_release_release_pb.Release.deserializeBinaryFromReader);
      msg.setRelease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.RollbackReleaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.RollbackReleaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.RollbackReleaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.RollbackReleaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelease();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_release_release_pb.Release.serializeBinaryToWriter
    );
  }
};


/**
 * optional hapi.release.Release release = 1;
 * @return {?proto.hapi.release.Release}
 */
proto.hapi.services.tiller.RollbackReleaseResponse.prototype.getRelease = function() {
  return /** @type{?proto.hapi.release.Release} */ (
    jspb.Message.getWrapperField(this, hapi_release_release_pb.Release, 1));
};


/** @param {?proto.hapi.release.Release|undefined} value */
proto.hapi.services.tiller.RollbackReleaseResponse.prototype.setRelease = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.services.tiller.RollbackReleaseResponse.prototype.clearRelease = function() {
  this.setRelease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.RollbackReleaseResponse.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.InstallReleaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.InstallReleaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.InstallReleaseRequest.displayName = 'proto.hapi.services.tiller.InstallReleaseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.InstallReleaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.InstallReleaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.InstallReleaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chart: (f = msg.getChart()) && hapi_chart_chart_pb.Chart.toObject(includeInstance, f),
    values: (f = msg.getValues()) && hapi_chart_config_pb.Config.toObject(includeInstance, f),
    dryRun: jspb.Message.getFieldWithDefault(msg, 3, false),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    disableHooks: jspb.Message.getFieldWithDefault(msg, 5, false),
    namespace: jspb.Message.getFieldWithDefault(msg, 6, ""),
    reuseName: jspb.Message.getFieldWithDefault(msg, 7, false),
    timeout: jspb.Message.getFieldWithDefault(msg, 8, 0),
    wait: jspb.Message.getFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.InstallReleaseRequest}
 */
proto.hapi.services.tiller.InstallReleaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.InstallReleaseRequest;
  return proto.hapi.services.tiller.InstallReleaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.InstallReleaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.InstallReleaseRequest}
 */
proto.hapi.services.tiller.InstallReleaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_chart_chart_pb.Chart;
      reader.readMessage(value,hapi_chart_chart_pb.Chart.deserializeBinaryFromReader);
      msg.setChart(value);
      break;
    case 2:
      var value = new hapi_chart_config_pb.Config;
      reader.readMessage(value,hapi_chart_config_pb.Config.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDryRun(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableHooks(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReuseName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeout(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWait(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.InstallReleaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.InstallReleaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.InstallReleaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_chart_chart_pb.Chart.serializeBinaryToWriter
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      hapi_chart_config_pb.Config.serializeBinaryToWriter
    );
  }
  f = message.getDryRun();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDisableHooks();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReuseName();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getWait();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional hapi.chart.Chart chart = 1;
 * @return {?proto.hapi.chart.Chart}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getChart = function() {
  return /** @type{?proto.hapi.chart.Chart} */ (
    jspb.Message.getWrapperField(this, hapi_chart_chart_pb.Chart, 1));
};


/** @param {?proto.hapi.chart.Chart|undefined} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setChart = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.services.tiller.InstallReleaseRequest.prototype.clearChart = function() {
  this.setChart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.hasChart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hapi.chart.Config values = 2;
 * @return {?proto.hapi.chart.Config}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getValues = function() {
  return /** @type{?proto.hapi.chart.Config} */ (
    jspb.Message.getWrapperField(this, hapi_chart_config_pb.Config, 2));
};


/** @param {?proto.hapi.chart.Config|undefined} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setValues = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hapi.services.tiller.InstallReleaseRequest.prototype.clearValues = function() {
  this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.hasValues = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool dry_run = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getDryRun = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setDryRun = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool disable_hooks = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getDisableHooks = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setDisableHooks = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string namespace = 6;
 * @return {string}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool reuse_name = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getReuseName = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setReuseName = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int64 timeout = 8;
 * @return {number}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool wait = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.getWait = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.InstallReleaseRequest.prototype.setWait = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.InstallReleaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.InstallReleaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.InstallReleaseResponse.displayName = 'proto.hapi.services.tiller.InstallReleaseResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.InstallReleaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.InstallReleaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.InstallReleaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.InstallReleaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    release: (f = msg.getRelease()) && hapi_release_release_pb.Release.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.InstallReleaseResponse}
 */
proto.hapi.services.tiller.InstallReleaseResponse.deserializeBinary = function(bytes) {
  console.log('tiller.InstallReleaseResponse.deserializeBinary');
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.InstallReleaseResponse;
  return proto.hapi.services.tiller.InstallReleaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.InstallReleaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.InstallReleaseResponse}
 */
proto.hapi.services.tiller.InstallReleaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_release_release_pb.Release;
      reader.readMessage(value,hapi_release_release_pb.Release.deserializeBinaryFromReader);
      msg.setRelease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.InstallReleaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.InstallReleaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.InstallReleaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.InstallReleaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelease();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_release_release_pb.Release.serializeBinaryToWriter
    );
  }
};


/**
 * optional hapi.release.Release release = 1;
 * @return {?proto.hapi.release.Release}
 */
proto.hapi.services.tiller.InstallReleaseResponse.prototype.getRelease = function() {
  return /** @type{?proto.hapi.release.Release} */ (
    jspb.Message.getWrapperField(this, hapi_release_release_pb.Release, 1));
};


/** @param {?proto.hapi.release.Release|undefined} value */
proto.hapi.services.tiller.InstallReleaseResponse.prototype.setRelease = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.services.tiller.InstallReleaseResponse.prototype.clearRelease = function() {
  this.setRelease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.InstallReleaseResponse.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.UninstallReleaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.UninstallReleaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.UninstallReleaseRequest.displayName = 'proto.hapi.services.tiller.UninstallReleaseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.UninstallReleaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.UninstallReleaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UninstallReleaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    disableHooks: jspb.Message.getFieldWithDefault(msg, 2, false),
    purge: jspb.Message.getFieldWithDefault(msg, 3, false),
    timeout: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.UninstallReleaseRequest}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.UninstallReleaseRequest;
  return proto.hapi.services.tiller.UninstallReleaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.UninstallReleaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.UninstallReleaseRequest}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableHooks(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPurge(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.UninstallReleaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.UninstallReleaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UninstallReleaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisableHooks();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPurge();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool disable_hooks = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.getDisableHooks = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.setDisableHooks = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool purge = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.getPurge = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.setPurge = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 timeout = 4;
 * @return {number}
 */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.UninstallReleaseRequest.prototype.setTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.UninstallReleaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.UninstallReleaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.UninstallReleaseResponse.displayName = 'proto.hapi.services.tiller.UninstallReleaseResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.UninstallReleaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.UninstallReleaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.UninstallReleaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UninstallReleaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    release: (f = msg.getRelease()) && hapi_release_release_pb.Release.toObject(includeInstance, f),
    info: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.UninstallReleaseResponse}
 */
proto.hapi.services.tiller.UninstallReleaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.UninstallReleaseResponse;
  return proto.hapi.services.tiller.UninstallReleaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.UninstallReleaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.UninstallReleaseResponse}
 */
proto.hapi.services.tiller.UninstallReleaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_release_release_pb.Release;
      reader.readMessage(value,hapi_release_release_pb.Release.deserializeBinaryFromReader);
      msg.setRelease(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.UninstallReleaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.UninstallReleaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.UninstallReleaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.UninstallReleaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelease();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_release_release_pb.Release.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional hapi.release.Release release = 1;
 * @return {?proto.hapi.release.Release}
 */
proto.hapi.services.tiller.UninstallReleaseResponse.prototype.getRelease = function() {
  return /** @type{?proto.hapi.release.Release} */ (
    jspb.Message.getWrapperField(this, hapi_release_release_pb.Release, 1));
};


/** @param {?proto.hapi.release.Release|undefined} value */
proto.hapi.services.tiller.UninstallReleaseResponse.prototype.setRelease = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.services.tiller.UninstallReleaseResponse.prototype.clearRelease = function() {
  this.setRelease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.UninstallReleaseResponse.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string info = 2;
 * @return {string}
 */
proto.hapi.services.tiller.UninstallReleaseResponse.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.UninstallReleaseResponse.prototype.setInfo = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.GetVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetVersionRequest.displayName = 'proto.hapi.services.tiller.GetVersionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetVersionRequest}
 */
proto.hapi.services.tiller.GetVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetVersionRequest;
  return proto.hapi.services.tiller.GetVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetVersionRequest}
 */
proto.hapi.services.tiller.GetVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetVersionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.GetVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetVersionResponse.displayName = 'proto.hapi.services.tiller.GetVersionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetVersionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetVersionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetVersionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetVersionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: (f = msg.getVersion()) && hapi_version_version_pb.Version.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetVersionResponse}
 */
proto.hapi.services.tiller.GetVersionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetVersionResponse;
  return proto.hapi.services.tiller.GetVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetVersionResponse}
 */
proto.hapi.services.tiller.GetVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_version_version_pb.Version;
      reader.readMessage(value,hapi_version_version_pb.Version.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetVersionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetVersionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetVersionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_version_version_pb.Version.serializeBinaryToWriter
    );
  }
};


/**
 * optional hapi.version.Version Version = 1;
 * @return {?proto.hapi.version.Version}
 */
proto.hapi.services.tiller.GetVersionResponse.prototype.getVersion = function() {
  return /** @type{?proto.hapi.version.Version} */ (
    jspb.Message.getWrapperField(this, hapi_version_version_pb.Version, 1));
};


/** @param {?proto.hapi.version.Version|undefined} value */
proto.hapi.services.tiller.GetVersionResponse.prototype.setVersion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.services.tiller.GetVersionResponse.prototype.clearVersion = function() {
  this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.services.tiller.GetVersionResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.GetHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetHistoryRequest.displayName = 'proto.hapi.services.tiller.GetHistoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    max: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetHistoryRequest}
 */
proto.hapi.services.tiller.GetHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetHistoryRequest;
  return proto.hapi.services.tiller.GetHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetHistoryRequest}
 */
proto.hapi.services.tiller.GetHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.GetHistoryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.GetHistoryRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 max = 2;
 * @return {number}
 */
proto.hapi.services.tiller.GetHistoryRequest.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.GetHistoryRequest.prototype.setMax = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.GetHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hapi.services.tiller.GetHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.hapi.services.tiller.GetHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.GetHistoryResponse.displayName = 'proto.hapi.services.tiller.GetHistoryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hapi.services.tiller.GetHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.GetHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.GetHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.GetHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    releasesList: jspb.Message.toObjectList(msg.getReleasesList(),
    hapi_release_release_pb.Release.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.GetHistoryResponse}
 */
proto.hapi.services.tiller.GetHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.GetHistoryResponse;
  return proto.hapi.services.tiller.GetHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.GetHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.GetHistoryResponse}
 */
proto.hapi.services.tiller.GetHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_release_release_pb.Release;
      reader.readMessage(value,hapi_release_release_pb.Release.deserializeBinaryFromReader);
      msg.addReleases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.GetHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.GetHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.GetHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.GetHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReleasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      hapi_release_release_pb.Release.serializeBinaryToWriter
    );
  }
};


/**
 * repeated hapi.release.Release releases = 1;
 * @return {!Array.<!proto.hapi.release.Release>}
 */
proto.hapi.services.tiller.GetHistoryResponse.prototype.getReleasesList = function() {
  return /** @type{!Array.<!proto.hapi.release.Release>} */ (
    jspb.Message.getRepeatedWrapperField(this, hapi_release_release_pb.Release, 1));
};


/** @param {!Array.<!proto.hapi.release.Release>} value */
proto.hapi.services.tiller.GetHistoryResponse.prototype.setReleasesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hapi.release.Release=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hapi.release.Release}
 */
proto.hapi.services.tiller.GetHistoryResponse.prototype.addReleases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hapi.release.Release, opt_index);
};


proto.hapi.services.tiller.GetHistoryResponse.prototype.clearReleasesList = function() {
  this.setReleasesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.TestReleaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.TestReleaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.TestReleaseRequest.displayName = 'proto.hapi.services.tiller.TestReleaseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.TestReleaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.TestReleaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.TestReleaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.TestReleaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cleanup: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.TestReleaseRequest}
 */
proto.hapi.services.tiller.TestReleaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.TestReleaseRequest;
  return proto.hapi.services.tiller.TestReleaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.TestReleaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.TestReleaseRequest}
 */
proto.hapi.services.tiller.TestReleaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleanup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.TestReleaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.TestReleaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.TestReleaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.TestReleaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCleanup();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hapi.services.tiller.TestReleaseRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.TestReleaseRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 timeout = 2;
 * @return {number}
 */
proto.hapi.services.tiller.TestReleaseRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hapi.services.tiller.TestReleaseRequest.prototype.setTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool cleanup = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hapi.services.tiller.TestReleaseRequest.prototype.getCleanup = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hapi.services.tiller.TestReleaseRequest.prototype.setCleanup = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.services.tiller.TestReleaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hapi.services.tiller.TestReleaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.services.tiller.TestReleaseResponse.displayName = 'proto.hapi.services.tiller.TestReleaseResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.services.tiller.TestReleaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.services.tiller.TestReleaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.services.tiller.TestReleaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.TestReleaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.services.tiller.TestReleaseResponse}
 */
proto.hapi.services.tiller.TestReleaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.services.tiller.TestReleaseResponse;
  return proto.hapi.services.tiller.TestReleaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.services.tiller.TestReleaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.services.tiller.TestReleaseResponse}
 */
proto.hapi.services.tiller.TestReleaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 2:
      var value = /** @type {!proto.hapi.release.TestRun.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.services.tiller.TestReleaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.services.tiller.TestReleaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.services.tiller.TestReleaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.services.tiller.TestReleaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.hapi.services.tiller.TestReleaseResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hapi.services.tiller.TestReleaseResponse.prototype.setMsg = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional hapi.release.TestRun.Status status = 2;
 * @return {!proto.hapi.release.TestRun.Status}
 */
proto.hapi.services.tiller.TestReleaseResponse.prototype.getStatus = function() {
  return /** @type {!proto.hapi.release.TestRun.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.hapi.release.TestRun.Status} value */
proto.hapi.services.tiller.TestReleaseResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


goog.object.extend(exports, proto.hapi.services.tiller);
