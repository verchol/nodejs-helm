/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var hapi_chart_config_pb = require('../../hapi/chart/config_pb.js');
var hapi_chart_metadata_pb = require('../../hapi/chart/metadata_pb.js');
var hapi_chart_template_pb = require('../../hapi/chart/template_pb.js');
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.exportSymbol('proto.hapi.chart.Chart', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hapi.chart.Chart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hapi.chart.Chart.repeatedFields_, null);
};
goog.inherits(proto.hapi.chart.Chart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hapi.chart.Chart.displayName = 'proto.hapi.chart.Chart';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hapi.chart.Chart.repeatedFields_ = [2,3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hapi.chart.Chart.prototype.toObject = function(opt_includeInstance) {
  return proto.hapi.chart.Chart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hapi.chart.Chart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.chart.Chart.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && hapi_chart_metadata_pb.Metadata.toObject(includeInstance, f),
    templatesList: jspb.Message.toObjectList(msg.getTemplatesList(),
    hapi_chart_template_pb.Template.toObject, includeInstance),
    dependenciesList: jspb.Message.toObjectList(msg.getDependenciesList(),
    proto.hapi.chart.Chart.toObject, includeInstance),
    values: (f = msg.getValues()) && hapi_chart_config_pb.Config.toObject(includeInstance, f),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hapi.chart.Chart}
 */
proto.hapi.chart.Chart.deserializeBinary = function(bytes) {
  console.log('deserializeBinary');
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hapi.chart.Chart;
  return proto.hapi.chart.Chart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hapi.chart.Chart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hapi.chart.Chart}
 */
proto.hapi.chart.Chart.deserializeBinaryFromReader = function(msg, reader) {
  console.log(`DESERIALIZE ${JSON.stringify(msg)}`);
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new hapi_chart_metadata_pb.Metadata;
      reader.readMessage(value,hapi_chart_metadata_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new hapi_chart_template_pb.Template;
      reader.readMessage(value,hapi_chart_template_pb.Template.deserializeBinaryFromReader);
      msg.addTemplates(value);
      break;
    case 3:
      var value = new proto.hapi.chart.Chart;
      reader.readMessage(value,proto.hapi.chart.Chart.deserializeBinaryFromReader);
      msg.addDependencies(value);
      break;
    case 4:
      var value = new hapi_chart_config_pb.Config;
      reader.readMessage(value,hapi_chart_config_pb.Config.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    case 5:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hapi.chart.Chart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hapi.chart.Chart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hapi.chart.Chart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hapi.chart.Chart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      hapi_chart_metadata_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getTemplatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      hapi_chart_template_pb.Template.serializeBinaryToWriter
    );
  }
  f = message.getDependenciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.hapi.chart.Chart.serializeBinaryToWriter
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      hapi_chart_config_pb.Config.serializeBinaryToWriter
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional Metadata metadata = 1;
 * @return {?proto.hapi.chart.Metadata}
 */
proto.hapi.chart.Chart.prototype.getMetadata = function() {
  return /** @type{?proto.hapi.chart.Metadata} */ (
    jspb.Message.getWrapperField(this, hapi_chart_metadata_pb.Metadata, 1));
};


/** @param {?proto.hapi.chart.Metadata|undefined} value */
proto.hapi.chart.Chart.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hapi.chart.Chart.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.chart.Chart.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Template templates = 2;
 * @return {!Array.<!proto.hapi.chart.Template>}
 */
proto.hapi.chart.Chart.prototype.getTemplatesList = function() {
  return /** @type{!Array.<!proto.hapi.chart.Template>} */ (
    jspb.Message.getRepeatedWrapperField(this, hapi_chart_template_pb.Template, 2));
};


/** @param {!Array.<!proto.hapi.chart.Template>} value */
proto.hapi.chart.Chart.prototype.setTemplatesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hapi.chart.Template=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hapi.chart.Template}
 */
proto.hapi.chart.Chart.prototype.addTemplates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hapi.chart.Template, opt_index);
};


proto.hapi.chart.Chart.prototype.clearTemplatesList = function() {
  this.setTemplatesList([]);
};


/**
 * repeated Chart dependencies = 3;
 * @return {!Array.<!proto.hapi.chart.Chart>}
 */
proto.hapi.chart.Chart.prototype.getDependenciesList = function() {
  return /** @type{!Array.<!proto.hapi.chart.Chart>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hapi.chart.Chart, 3));
};


/** @param {!Array.<!proto.hapi.chart.Chart>} value */
proto.hapi.chart.Chart.prototype.setDependenciesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hapi.chart.Chart=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hapi.chart.Chart}
 */
proto.hapi.chart.Chart.prototype.addDependencies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hapi.chart.Chart, opt_index);
};


proto.hapi.chart.Chart.prototype.clearDependenciesList = function() {
  this.setDependenciesList([]);
};


/**
 * optional Config values = 4;
 * @return {?proto.hapi.chart.Config}
 */
proto.hapi.chart.Chart.prototype.getValues = function() {
  return /** @type{?proto.hapi.chart.Config} */ (
    jspb.Message.getWrapperField(this, hapi_chart_config_pb.Config, 4));
};


/** @param {?proto.hapi.chart.Config|undefined} value */
proto.hapi.chart.Chart.prototype.setValues = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hapi.chart.Chart.prototype.clearValues = function() {
  this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hapi.chart.Chart.prototype.hasValues = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated google.protobuf.Any files = 5;
 * @return {!Array.<!proto.google.protobuf.Any>}
 */
proto.hapi.chart.Chart.prototype.getFilesList = function() {
  return /** @type{!Array.<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 5));
};


/** @param {!Array.<!proto.google.protobuf.Any>} value */
proto.hapi.chart.Chart.prototype.setFilesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.hapi.chart.Chart.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.protobuf.Any, opt_index);
};


proto.hapi.chart.Chart.prototype.clearFilesList = function() {
  this.setFilesList([]);
};


goog.object.extend(exports, proto.hapi.chart);
